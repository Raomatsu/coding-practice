【Q1】
N個の足場があって，i(＝0,1,...,N－1)番目の足場の高さはhiで与えられます．
最初０番目の足場にカエルがいて，以下のいずれかの行動を繰り返してN－1番目の足場を目指します．　
足場iから足場i＋1へと移動する(コストは|hi－hi＋1|)　
足場iから足場i＋2へと移動する(コストは|hi－hi＋2|)
カエルがN－1番目の足場にたどり着くまでに要するコストの総和の最小値を求めてください．

・問題をグラフ化（頂点=エッジと辺=ノードの集合で把握）することで見通しをよくする
→こう捉えなおせる　
　頂点０から頂点N-1まで辺をたどっていく方法のうち，たどった各辺の重みの総和の最小値を求めてください．

・各ノードに辿り着くまでの最小コストを出していく。
　最終的にN-1番目のノードの最小コストが出る。
・i番目のノードまでの最小コストは、以下のどちらかになる　　
　・i-2番目のノードに辿り着く最小コスト +  i-2 -> i番目のノードへのコスト
　・i-1番目のノードに辿り着く最小コスト +  i-1 -> i番目のノードへのコスト
・↑の部分問題の解を出すのを繰り返していけばよい
→「部分構造最適性」の構造を持つ問題。

・コストを最小のものに更新していくような処理
→「緩和」
　・「貰う」遷移形式
　　→costList[i]に、i-1/i-2から遷移してきた際の（i時点での）コストを考える
　・「配る」遷移形式
　　→costList[i]から、i+1/i+2に遷移した際の（i+1/2時点での）コストを考える
いずれも大事なのは（一般化すると）...
「頂点uから頂点vに遷移する辺に関する緩和処理を成立させるためには、dp[u]の値が確定していなければならない」
ということ。
この性質によって、全パターン見るとすれば指数オーダーな問題も、定数オーダーで解ける場合がある
（Frog問題とかはそう）
ただ、再帰で全パターン見る解き方であっても、メモ化すれば定数オーダーでいける。
